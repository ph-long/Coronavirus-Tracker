[{"C:\\Users\\Philip\\react-stuff\\covid\\src\\index.js":"1","C:\\Users\\Philip\\react-stuff\\covid\\src\\App.js":"2","C:\\Users\\Philip\\react-stuff\\covid\\src\\components\\index.js":"3","C:\\Users\\Philip\\react-stuff\\covid\\src\\api\\index.js":"4","C:\\Users\\Philip\\react-stuff\\covid\\src\\components\\Cards\\Cards.js":"5","C:\\Users\\Philip\\react-stuff\\covid\\src\\components\\Charts\\Charts.js":"6","C:\\Users\\Philip\\react-stuff\\covid\\src\\components\\CountryPicker\\CountryPicker.js":"7"},{"size":335,"mtime":1608860263800,"results":"8","hashOfConfig":"9"},{"size":1123,"mtime":1609205625249,"results":"10","hashOfConfig":"9"},{"size":172,"mtime":1608862816003,"results":"11","hashOfConfig":"9"},{"size":1558,"mtime":1609205381292,"results":"12","hashOfConfig":"9"},{"size":3713,"mtime":1609298721730,"results":"13","hashOfConfig":"9"},{"size":2770,"mtime":1609298734862,"results":"14","hashOfConfig":"9"},{"size":1025,"mtime":1609298740743,"results":"15","hashOfConfig":"9"},{"filePath":"16","messages":"17","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"18"},"90vynv",{"filePath":"19","messages":"20","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"18"},{"filePath":"21","messages":"22","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"18"},{"filePath":"23","messages":"24","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"18"},{"filePath":"25","messages":"26","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"27"},{"filePath":"28","messages":"29","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"30","usedDeprecatedRules":"18"},{"filePath":"31","messages":"32","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"18"},"C:\\Users\\Philip\\react-stuff\\covid\\src\\index.js",[],["33","34"],"C:\\Users\\Philip\\react-stuff\\covid\\src\\App.js",[],"C:\\Users\\Philip\\react-stuff\\covid\\src\\components\\index.js",[],"C:\\Users\\Philip\\react-stuff\\covid\\src\\api\\index.js",[],"C:\\Users\\Philip\\react-stuff\\covid\\src\\components\\Cards\\Cards.js",[],["35","36"],"C:\\Users\\Philip\\react-stuff\\covid\\src\\components\\Charts\\Charts.js",["37"],"import React, {useState, useEffect} from \"react\";\r\nimport {fetchDailyData} from \"../../api\";\r\nimport {Line, Bar} from 'react-chartjs-2';\r\nimport styles from \"./Charts.module.css\"\r\n\r\n// data is prop taking in that gets data.confirmed into confirmed etc\r\nconst Charts = ({data: {confirmed, deaths, recovered}, country}) => {\r\n    // dailyData is an array, each element holds a struct of date, confirmed, deaths, and recovered\r\n    const [dailyData, setDailyData] = useState([]);\r\n\r\n    useEffect(() => {\r\n        // define fetchAPI\r\n        const fetchAPI = async () => {\r\n            setDailyData(await fetchDailyData());\r\n        }\r\n        // console.log(dailyData);\r\n        // calls the fetch\r\n        fetchAPI();\r\n    }, []);\r\n\r\n    const lineChart = (\r\n        // tertiary form if length is not zero do line else return null\r\n        dailyData.length ? (\r\n        <Line\r\n            data = {{\r\n                // (object) {function}\r\n                labels: dailyData.reverse().map(({date}) => new Date(date).toLocaleDateString()),\r\n                datasets: [{\r\n                    data: dailyData.map((data) => data.confirmed),\r\n                    label:'Infected',\r\n                    borderColor: '#3333ff',\r\n                    fill:true,\r\n                },{\r\n                    data: dailyData.map((data) => data.deaths),\r\n                    label:'Deaths',\r\n                    borderColor: 'red',\r\n                    borderColor: 'rgba(255,0,0,0.5)',\r\n                    fill:true,  \r\n                },{\r\n                    data: dailyData.map((data) => data.recovered),\r\n                    label: 'Recovered',\r\n                    borderColor: 'green',\r\n                    backgroundColor: 'rgba(0,255,0,0.5)',\r\n                    fill:true,\r\n                }],\r\n            }}\r\n        />) : null\r\n    );\r\n\r\n    const barChart = (\r\n        confirmed\r\n        ? (\r\n            // double {{}}, one makes dynamic i.e. js and the other specifies object\r\n            <Bar\r\n                data = {{\r\n                    labels: ['Infected', 'Recovered', 'Deaths'],\r\n                    datasets: [{\r\n                        label: 'People',\r\n                        backgroundColor: ['rgba(0,0,255,0.5)','rgba(0,255,0,0.5)','rgba(255,0,0,0.5)',],\r\n                        data: [confirmed.value, recovered.value, deaths.value],\r\n                    }]\r\n                }}\r\n                options = {{\r\n                    legend: {display: false},\r\n                    title: {display:true, text: `Current state in ${country}`},\r\n                }}\r\n            />\r\n        ) : null\r\n    )\r\n\r\n    return (\r\n        <div className={styles.container}>\r\n            {country ? barChart: lineChart}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Charts;","C:\\Users\\Philip\\react-stuff\\covid\\src\\components\\CountryPicker\\CountryPicker.js",[],{"ruleId":"38","replacedBy":"39"},{"ruleId":"40","replacedBy":"41"},{"ruleId":"38","replacedBy":"42"},{"ruleId":"40","replacedBy":"43"},{"ruleId":"44","severity":1,"message":"45","line":37,"column":21,"nodeType":"46","messageId":"47","endLine":37,"endColumn":32},"no-native-reassign",["48"],"no-negated-in-lhs",["49"],["48"],["49"],"no-dupe-keys","Duplicate key 'borderColor'.","ObjectExpression","unexpected","no-global-assign","no-unsafe-negation"]